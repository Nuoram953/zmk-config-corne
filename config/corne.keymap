#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        quick_delete: quick_delete {
            compatible = "zmk,behavior-tap-dance";
            label = "QUICK_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp MINUS>;
            key-positions = <15 20>;
            layers = <0>;
        };

        Semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <32 33>;
        };

        BaseToGam {
            bindings = <&to 5>;
            key-positions = <38 39>;
            layers = <0>;
        };

        GamToBase {
            bindings = <&to 0>;
            key-positions = <38 39>;
            layers = <5>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <20 21 19>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 15 14>;
        };

        singlequote {
            bindings = <&kp SQT>;
            key-positions = <6 18>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 19>;
        };

        layer_2 {
            bindings = <&mo 6>;
            key-positions = <37 13>;
            layers = <5>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <14 21>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <19 7>;
        };

        leftpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 8>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q       &kp W       &kp F         &kp P             &kp B        &kp J        &kp L            &kp U         &kp Y            &kp P            &none
&none  &hm LWIN A  &hm LALT R  &hm LCTRL S   &hm LEFT_SHIFT T  &kp G        &kp M        &hm RSHIFT N     &hm RCTRL E   &hm RIGHT_ALT I  &hm RIGHT_WIN O  &none
&none  &kp Z       &kp X       &kp C         &kp D             &kp V        &kp K        &kp H            &kp COMMA     &kp DOT          &kp FSLH         &none
                               &lt 8 ESCAPE  &lt 4 SPACE       &lt 7 TAB    &lt 2 ENTER  &lt 1 BACKSPACE  &lt 2 DELETE
            >;
        };

        NUM {
            display-name = "Number";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans       &trans   &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans       &trans   &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &kp SLASH     &kp PLUS      &kp PERIOD        &kp MINUS       &trans       &trans   &kp N1  &kp N2  &kp N3  &trans  &trans
                                    &kp LGUI          &trans          &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL          &kp AT             &kp HASH       &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RPAR  &trans
&trans  &trans            &trans             &trans         &trans            &kp GRAVE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT              &kp BSLH  &trans
&trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp TILDE    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC              &kp PIPE  &trans
                                             &kp QUESTION   &kp COLON         &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };

        NAV {
            display-name = "Navigation";
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans    &kp LC(Y)     &kp LC(P)      &kp LC(C)     &kp LC(X)      &kp LC(Z)        &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &kp CAPSLOCK  &kp LEFT       &kp UP_ARROW  &kp DOWN       &kp RIGHT_ARROW  &trans
&trans  &trans        &trans        &trans            &trans          &trans    &kp INSERT    &kp HOME       &kp PAGE_UP   &kp PAGE_DOWN  &kp END          &trans
                                    &trans            &trans          &trans    &kp ENTER     &kp BACKSPACE  &kp DELETE
            >;
        };

        GAM {
            bindings = <
&trans  &kp LEFT_ALT      &kp Q  &kp W    &kp E      &kp R    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_CONTROL  &kp A  &kp S    &kp D      &kp F    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT    &kp Z  &kp X    &kp C      &kp V    &trans  &trans  &trans  &trans  &trans  &trans
                                 &kp TAB  &kp SPACE  &mo 6    &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        GAM_2 {
            bindings = <
&trans  &kp O         &kp I         &kp B         &kp J         &kp M         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp T         &kp Y         &trans        &kp G         &kp ESCAPE    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };

        MOS {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans    &trans     &kp LC(P)       &kp LC(C)       &kp LC(X)     &kp LC(Y)        &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &trans     &kp LEFT        &kp DOWN        &kp UP_ARROW  &kp RIGHT        &trans
&trans  &trans        &trans        &trans     &trans          &trans    &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
                                    &trans     &trans          &trans    &mkp RCLK  &mkp LCLK       &mkp MCLK
            >;

            label = "Mouse";
        };

        MED {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans            &trans      &trans            &trans             &trans           &trans        &trans
&trans  &trans  &trans  &trans  &trans      &trans            &trans      &kp K_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_NEXT    &trans
&trans  &trans  &trans  &trans  &bt BT_CLR  &bt BT_CLR_ALL    &trans      &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &trans
                        &trans  &trans      &trans            &kp K_STOP  &kp C_PLAY_PAUSE  &kp K_MUTE
            >;

            label = "Media";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
